// <auto-generated />
using System;
using BookingMovie;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingMovie.Migrations
{
    [DbContext(typeof(VeXemPhimContext))]
    [Migration("20211029074951_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookingMovie.Models.ChiTietChieu", b =>
                {
                    b.Property<int>("IdChiTietChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("GiaVe")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GioBatDau")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdPhim")
                        .HasColumnType("int");

                    b.Property<int?>("IdPhong")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayChieu")
                        .HasColumnType("datetime");

                    b.HasKey("IdChiTietChieu");

                    b.HasIndex("IdPhim");

                    b.HasIndex("IdPhong");

                    b.ToTable("ChiTietChieu");
                });

            modelBuilder.Entity("BookingMovie.Models.Phim", b =>
                {
                    b.Property<int>("IdPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdTheLoai")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("image");

                    b.Property<string>("TenPhim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThoiLuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPhim");

                    b.HasIndex("IdTheLoai");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("BookingMovie.Models.Phong", b =>
                {
                    b.Property<int>("IdPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SoGheToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPhong");

                    b.ToTable("Phong");
                });

            modelBuilder.Entity("BookingMovie.Models.TheLoai", b =>
                {
                    b.Property<int>("IdTheLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTheLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("BookingMovie.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .IsFixedLength(true);

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BookingMovie.Models.Ve", b =>
                {
                    b.Property<int>("MaVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdChiTietChieu")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("SoGhe")
                        .HasColumnType("int");

                    b.HasKey("MaVe");

                    b.HasIndex("IdChiTietChieu");

                    b.HasIndex("IdUser");

                    b.ToTable("Ve");
                });

            modelBuilder.Entity("BookingMovie.Models.ChiTietChieu", b =>
                {
                    b.HasOne("BookingMovie.Models.Phim", "IdPhimNavigation")
                        .WithMany("ChiTietChieus")
                        .HasForeignKey("IdPhim")
                        .HasConstraintName("FK_ChiTietChieu_Phim");

                    b.HasOne("BookingMovie.Models.Phong", "IdPhongNavigation")
                        .WithMany("ChiTietChieus")
                        .HasForeignKey("IdPhong")
                        .HasConstraintName("FK_ChiTietChieu_Phong");

                    b.Navigation("IdPhimNavigation");

                    b.Navigation("IdPhongNavigation");
                });

            modelBuilder.Entity("BookingMovie.Models.Phim", b =>
                {
                    b.HasOne("BookingMovie.Models.TheLoai", "IdTheLoaiNavigation")
                        .WithMany("Phims")
                        .HasForeignKey("IdTheLoai")
                        .HasConstraintName("FK_Phim_TheLoai");

                    b.Navigation("IdTheLoaiNavigation");
                });

            modelBuilder.Entity("BookingMovie.Models.Ve", b =>
                {
                    b.HasOne("BookingMovie.Models.ChiTietChieu", "IdChiTietChieuNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("IdChiTietChieu")
                        .HasConstraintName("FK_Ve_ChiTietChieu");

                    b.HasOne("BookingMovie.Models.User", "IdUserNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_Ve_User");

                    b.Navigation("IdChiTietChieuNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BookingMovie.Models.ChiTietChieu", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("BookingMovie.Models.Phim", b =>
                {
                    b.Navigation("ChiTietChieus");
                });

            modelBuilder.Entity("BookingMovie.Models.Phong", b =>
                {
                    b.Navigation("ChiTietChieus");
                });

            modelBuilder.Entity("BookingMovie.Models.TheLoai", b =>
                {
                    b.Navigation("Phims");
                });

            modelBuilder.Entity("BookingMovie.Models.User", b =>
                {
                    b.Navigation("Ves");
                });
#pragma warning restore 612, 618
        }
    }
}
